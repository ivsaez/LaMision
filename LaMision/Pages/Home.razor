@page "/"
@using ClimaticsLang.Lang
@using ItemsLang.Lang
@using LaMision.Core
@using LaMision.Core.Lang
@using LaMision.Core.Vaults
@using Languager
@using MappingLang.Lang
@using Outputer
@using Outputer.Choicing
@using Stories

<PageTitle>La Misión (Rayuela de arena 2024)</PageTitle>

<div>
    <i>Hora local: @time</i>
    <p></p>
</div>

<div>
    @if (output is not null)
    {
        foreach (var item in output.All)
        {
            if (item is Conversation)
            {
                var conversation = item as Conversation;
                foreach (var subitem in conversation!.All)
                {
                    <p role="contentinfo">@subitem.ToString()</p>
                }
            }
            else
            {
                <p role="contentinfo">@item.ToString()</p>
            }
        }
    }
</div>

<div>
    @if (interaction is null || !interaction.HasChoices || interaction.Choices.IsEmpty)
    {
        <div role="option">
            <button class="btn btn-primary" @onclick="Continue">Continuar</button>
        </div>
    }
    else
    {
        foreach (var option in interaction.Choices.Options)
        {
            <div role="option">
                <button class="btn btn-primary" @onclick="() => onOptionSelected(option.Index)">@option.Value</button>
            </div>
        }
    }
</div>

@code {
    private Output? output;

    private GameInteraction? interaction = null;
    private Input input = Input.Void;

    private string time = string.Empty;

    private Game game = new Game(
            Language.ES,
            WorldBuilder.Build(),
            new DictionaryProvider[]
            {
                new MisionDictionaryProvider(),
                new MisionItemsDictionaryProvider(),
                new MisionMappedsProvider(),
                new ItemsDictionaryProvider(),
                new MappingDictionaryProvider(),
                new ClimaticsDictionaryProvider()
            },
            new StoriesVault[]
            {
                BasicVault.Get(),
                RadioVault.Get(),
                ParticularVault.Get(),
                ConnectionVault.Get()
            });

    protected override void OnInitialized()
    {
        output = game.Start();
        time = game.GetTime();
    }

    private void onOptionSelected(int index)
    {
        input = new Input(index, interaction!.Choices.Range);
        interaction = game.NextAction(input);
        time = game.GetTime();

        if (interaction.HasText)
            output = interaction.Output;
    }

    private void Continue()
    {
        interaction = game.NextAction(Input.Void);
        time = game.GetTime();

        if (interaction.HasText)
            output = interaction.Output;
    }
}