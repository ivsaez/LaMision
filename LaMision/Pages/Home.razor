@page "/"
@using ClimaticsLang.Lang
@using ItemsLang.Lang
@using LaMision.Core
@using LaMision.Core.Lang
@using LaMision.Core.Vaults
@using Languager
@using MappingLang.Lang
@using Outputer
@using Outputer.Choicing
@using Stories
@using LaMision.Components

<PageTitle>La Misión (Rayuela de arena 2024)</PageTitle>

<Timer Time=@game.GetTime()></Timer>

<div class="container mt-3">
    <div class="row vh-100">
        <div class="col-md-6 border p-3 overflow-auto h-75">
            <InteractionDisplayer Interaction="@interaction" OnContinue="@Continue" OnOptionSelected="SelectOption" />
        </div>

        <div class="col-md-6 border p-3 overflow-auto h-75">
            <Outputs Elements="@outputs" />
        </div>
    </div>
</div>

@code {
    private List<Output> outputs = new List<Output>();

    private GameInteraction? interaction = null;
    private Input input = Input.Void;

    private string time = string.Empty;

    private Game game = new Game(
            Language.ES,
            WorldBuilder.Build(),
            new DictionaryProvider[]
            {
                new MisionDictionaryProvider(),
                new MisionItemsDictionaryProvider(),
                new MisionMappedsProvider(),
                new ItemsDictionaryProvider(),
                new MappingDictionaryProvider(),
                new ClimaticsDictionaryProvider()
            },
            new StoriesVault[]
            {
                BasicVault.Get(),
                RadioVault.Get(),
                ParticularVault.Get(),
                ConnectionVault.Get(),
                ExtranoVault.Get(),
                EndingsVault.Get()
            });

    protected override void OnInitialized()
    {
        outputs.Add(game.Start());
    }

    private void SelectOption(int index)
    {
        input = new Input(index, interaction!.Choices.Range);
        interaction = game.NextAction(input);

        if (interaction.HasText)
            AddOutput(interaction.Output);
    }

    private void Continue()
    {
        interaction = game.NextAction(Input.Void);

        if (interaction.HasText)
            AddOutput(interaction.Output);
    }

    private void AddOutput(Output output)
    {
        if (!output.IsEmpty)
            outputs.Insert(0, output);
    }
}